'use strict';
var qtools = require('qtools'),
	qtools = new qtools(module),
	events = require('events'),
	fs = require('fs'),
	crypto = require('crypto'),
	util = require('util');

//START OF moduleFunction() ============================================================

var moduleFunction = function(args) {
	events.EventEmitter.call(this);
	this.forceEvent = forceEvent;
	this.args = args;
	this.metaData = {};
	this.addMeta = function(name, data) {
		this.metaData[name] = data;
	}

		qtools.validateProperties({
			subject: args || {},
			targetScope: this, //will add listed items to targetScope
			propList: [
				{
					name: 'secretStoragePath',
					optional: false
				}
			]
		});


	var self = this,
		forceEvent = function(eventName, outData) {
			this.emit(eventName, {
				eventName: eventName,
				data: outData
			});
		};


	//LOCAL FUNCTIONS ====================================



	//METHODS AND PROPERTIES ====================================



	//INITIALIZATION ====================================

	var genNameString = function() {

		var name = crypto.randomBytes(33).toString('base64'); //yields a 44 character file name
		name = name.replace(/\//g, '-');
		return name;
	}

	this.create = function() {
		var name=genNameString();
		while (qtools.realPath(self.secretStoragePath+'/'+name) != '') {
			var name=genNameString();
		}

		return name;
	}

	return this;
};

//END OF moduleFunction() ============================================================

util.inherits(moduleFunction, events.EventEmitter);
module.exports = moduleFunction;







